В предыдущих разделах представлен синтаксис для объявления типа класса и создания экземпляра этого типа. При создании экземпляра типа необходимо убедиться, что его поля и свойства инициализированы в полезные значения. Существует несколько способов инициализации значений:
- Примите значения по умолчанию
- Инициализаторы полей
- Параметры конструктора
- Инициализаторы объектов
Каждый тип .NET имеет значение по умолчанию. Как правило, это значение равно 0 для типов чисел и null для всех ссылочных типов. Вы можете полагаться на это значение по умолчанию, если оно разумно в приложении.

Если значение по умолчанию для .NET не является правильным, можно задать начальное значение с помощью инициализатора полей:

==========================================
public class Container
{
    // Initialize capacity field to a default value of 10:
    private int _capacity = 10;
}
==========================================

Начиная с C# 12, можно определить основной конструктор в рамках объявления класса:

==========================================
public class Container(int capacity)
{
    private int _capacity = capacity;
}
==========================================

Добавление параметров в имя класса определяет основной конструктор. Эти параметры доступны в теле класса, который включает его элементы. Их можно использовать для инициализации полей или в любом другом месте, где они необходимы.

Можно также использовать модификатор для свойства и разрешить вызывающим пользователям использовать требуемый инициализатор объектов, чтобы задать начальное значение свойства:

==========================================
public class Person
{
    public required string LastName { get; set; }
    public required string FirstName { get; set; }
}
==========================================

При вызове обязательно инициализировать свойства значениями:

==========================================
var p1 = new Person(); // Ошибка! Не заданы обязательные свойства
var p2 = new Person() { FirstName = "Grace", LastName = "Hopper" };
==========================================
